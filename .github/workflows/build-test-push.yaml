name: sprobot build, test, and maybe push

on:
  push:
    branches-ignore: # Dependabot branches get ran through pull_request
      - 'dependabot/**'
  pull_request:
  schedule:
    - cron: '0 5 * * 1,3,5'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
      fail-fast: true
      max-parallel: 1 # mypy is extremely slow, but we cache, let amd64 run first

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and don't push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: sprobot-local-lint
          target: lint
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

      - name: Cache mypy
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: |
            /tmp/sprobot-mypy-cache
            /tmp/sprobot-web-mypy-cache
          key: mypy-cache-${{ runner.os }}-${{ github.run_id }} # This is a hack to update the cache every run
          restore-keys: |
            mypy-cache-${{ runner.os }}

      # Just in case we didn't get anything from the cache
      - name: Create folder
        run: |
          mkdir -p /tmp/sprobot-mypy-cache || true
          mkdir -p /tmp/sprobot-web-mypy-cache || true

      - name: run linters against it
        run: docker run --platform ${{ matrix.platform }} --mount type=bind,source=/tmp/sprobot-mypy-cache,target=/code/sprobot/.mypy_cache --mount type=bind,source=/tmp/sprobot-web-mypy-cache,target=/code/sprobot-web/.mypy_cache sprobot-local-lint
        
  test:
    needs: [lint]
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and don't push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: sprobot-local-test
          target: test
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

      - name: run tests+linters against it
        run: docker run --platform ${{ matrix.platform }} sprobot-local-test


  publish-latest:
    needs: [test, lint]
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: sadbox/sprobot:latest
          target: prod
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=linux/amd64
          cache-from: type=gha,scope=linux/arm64
